#!/usr/bin/python

'''
Create configuration files for running and debugging termfu
-------

dev - developer termfu setup
dbg - termfu process being debugged

Directory: scripts/...

    File                        Script              Type
    -----------------------------------------------------
    .termfu_run_gdb             make run_gdb        dev
    .termfu_run_pdb             make run_pdb        dev
    .termfu_conn_proc_termfu    conn_proc_termfu    dev
    .termfu_proc_gdb            make proc_gdb       dbg
    .termfu_proc_pdb            make pdoc_pdb       dbg

'''



#
# Configuration file paths
#

path_run_gdb            = 'scripts/.termfu_run_gdb'
path_run_pdb            = 'scripts/.termfu_run_pdb'
path_conn_proc_termfu   = 'scripts/.termfu_conn_proc_termfu'
path_proc_gdb           = 'scripts/.termfu_proc_gdb'
path_proc_pdb           = 'scripts/.termfu_proc_pdb'



#
# Commands
#

cmd_label = '''
[ command ]

'''
cmd_run_gdb          = cmd_label + 'gdb --quiet --interpreter=mi misc/hello\n'
cmd_run_pdb          = cmd_label + 'python -m pdb misc/gcd.py\n'
cmd_conn_proc_termfu = cmd_label + 'gdb --quiet --interpreter=mi\n'
cmd_proc_gdb         = cmd_label + 'gdb --quiet --interpreter=mi misc/hello\n'
cmd_proc_pdb         = cmd_label + 'python -m pdb misc/gcd.py\n'



#
# Plugins
#

plugins = '''
[ plugins ]

# header commands
Prm : m : pro(m)pt
AtP : A : (A)ttach
Trg : t : (t)arget
Lay : l : (l)ayouts
Qut : q : (q)uit
Run : r : (r)un
Nxt : n : (n)ext
Stp : s : (s)tep
Con : c : (c)ontinue
Unt : u : (u)ntil
Fin : f : (f)inish
Kil : k : (k)ill

# windows
Asm : a : (a)ssembly
Brk : e : br(e)akpoints
Dbg : d : (d)ebug out
LcV : v : local (v)ars
Prg : p : (p)rogram out
Reg : g : re(g)isters
Src : o : s(o)urce file
Stk : T : s(T)ack
Wat : w : (w)atch

'''


#
# Layouts
#

gdb_layout_1 = '''
[ layout : Main ]

>h
mAtlq
rnscufk

>w
eeeooooo
wwwooooo
vvvooooo
TTpppddd

[ layout : Assembly / Registers ]

>h
mAtlq
rnscufk

>w
oag
oag
oag
wpT

'''

pdb_layout_1    = '''
[ layout : Main ]

>h
mlq
rnscufk

>w
eo
To
wo
vd
pd

'''

layout_run_gdb          = gdb_layout_1
layout_run_pdb          = pdb_layout_1
layout_conn_proc_termfu = gdb_layout_1
layout_proc_gdb         = gdb_layout_1
layout_proc_pdb         = pdb_layout_1



#
# File content
#

config_run_gdb          = cmd_run_gdb          + plugins + layout_run_gdb
config_run_pdb          = cmd_run_pdb          + plugins + layout_run_pdb
config_conn_proc_termfu = cmd_conn_proc_termfu + plugins + layout_conn_proc_termfu
config_proc_gdb         = cmd_proc_gdb         + plugins + layout_proc_gdb
config_proc_pdb         = cmd_proc_pdb         + plugins + layout_proc_pdb



#
# Create files
#

def create_file (path, config):
    with open (path, 'w') as file:
        file.write(config)
    print (f'Created: {path}')

create_file (path_run_gdb,    config_run_gdb)
create_file (path_run_pdb,    config_run_pdb)
create_file (path_conn_proc_termfu, config_conn_proc_termfu)
create_file (path_proc_gdb, config_proc_gdb)
create_file (path_proc_pdb, config_proc_pdb)


#!/bin/sh

#
# Debug termfu_dev with termfu_dev
# ---------
# - Ncurses programs have a problem receiving user input when run in a different terminal via GDB's tty command.
# - This script solves that issue at the expense of having to quit and restart sessions.
# - `sudo` access is required to attach to the debugged process
# - Tip -- create a terminal screen refresh shortcut for Ncurses errors.
#
# Usage: 
#
#   - Debugs with the `./termfu` build created by `make`
#   - Debugs the `termfu_dev` build created by `make dev` or `make devf`
#
#   - Start termfu_dev process to be debugged in different terminal
#       $ make proc_<debugger>
#       - Creates PID_FILE on launch, pauses execution inside main() -> initial_configure()
#
#   - Connect to process with this script
#       $ make conn_proc_termfu
#       - Set (b)reakpoint after initial_configure() then (c)ontinue execution
#
#   - Resume debugged process by pressing any key
#
#   - Tip -- keep an eye on the debugger's header command colors when moving through the code.
#     If the command is yellow, that usually means that it is waiting for command input
#     from the debugged process.
#
#   - Restart session
#       - Quit debugged termfu process:
#           - From inside the debugged process:  (q)uit
#           - From the debugger:  (gdb) signal 2
#       - Rerun `make proc_<debugger>`
#       - Reconnect debugger:
#           - Quit, rerun `make conn_proc_termfu` (gets PID automatically from file)
#           - Manually input new PID in termfu prompt (see process message):  (gdb) attach <pid>
#

PID_FILE="/tmp/termfu.pid"
CONFIG="scripts/.termfu_conn_proc_termfu"
DATA="${CONFIG}_data"

if [ -e $PID_FILE ]; then

    # Get most recent PID
    TERMFU_PID=`cat ${PID_FILE}`
    echo $TERMFU_PID

    #
    # Add PID to gdb command
    #
    # In order to load the debugged process' persisted breakpoints it must be attached to immediately
    # via the -p flag in the initial GDB command inside the termfu configuration file. 
    #
    sed -i "s|gdb --quiet --interpreter=mi.*|gdb --quiet --interpreter=mi -p $TERMFU_PID|" "$CONFIG"

    sudo ./termfu_dev -c $CONFIG -p $DATA
    
else
    echo "PID file \"${PID_FILE}\" not found. Start debugged process first."
fi
